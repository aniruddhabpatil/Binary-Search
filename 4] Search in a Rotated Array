// https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array4618/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article


int searchMin(int a[],int n)
    {
        int i=0,j=n-1;
        while(i<=j)
        {
            int mid=i+(j-i)/2;
            if(a[mid]<a[(mid-1)%n] && a[mid]<a[(mid+1)%n])
                return mid;
            if(a[mid]<a[j])
                j=mid-1;
            else
                i=mid+1;
        }
        return 0;
    }
    int BS(int a[],int l,int h,int key)
    {
        while(l<=h)
        {
            int mid= l+(h-l)/2;
            if(a[mid]==key)
                return mid;
            if(key<a[mid])
                h=mid-1;
            else
                l=mid+1;
        }
        return -1;
    }
    
    int search(int A[], int l, int h, int key){
        // l: The starting index
        // h: The ending index, you have to search the key in this range
        
        //complete the function here
        int x = searchMin(A,h-l+1);
        int l1 = BS(A,0,x-1,key);
        int l2 = BS(A,x,h,key);
        if(l1!=-1)
            return l1;
        else
            return l2;
    }
