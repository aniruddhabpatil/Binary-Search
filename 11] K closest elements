// https://practice.geeksforgeeks.org/problems/k-closest-elements3619/1
// array is sorted so used BS else use heaps

int BS(vector<int> arr, int n, int x)
    {
        int i=0,j=n-1,res=0;
        while(i<=j)
        {
            int mid=i+(j-i)/2;
            //cout<<"mid"<<mid<<endl;
            if(arr[mid]==x)
                return mid;
            if(arr[mid]<x)
            {
                i=mid+1;
                res=mid;
            }
            else
                j=mid-1;
        }
        return res;
    }

    vector<int> printKClosest(vector<int> arr, int n, int k, int x) 
    {
        // code here
        vector<int> ans;
        int i,j,mid;
        mid=BS(arr,n,x);
        //cout<<"mid"<<mid;
        i=mid;
        j=mid+1;
        while(i>=0 && j<n && k>0)
        {
            int a1=abs(arr[i]-x);
            int a2=abs(arr[j]-x);
            if(a1<a2)
            {
                if(a1!=0)
                {
                    ans.push_back(arr[i]);
                    k--;
                }
                i--;
            }
            else
            {
                if(a2!=0)
                {
                    ans.push_back(arr[j]);
                    k--;
                }
                j++;
            }
        //    cout<<i<<j<<k<<endl;
            
        }
        while(k>0 && j==n && i>=0)
        {
            if(arr[i]-x!=0)
            {
                ans.push_back(arr[i]);
                k--;
            }
            i--;
        }
        while(k>0 && i==-1  && j<n)
        {
            if(arr[j]-x!=0)
            {
                ans.push_back(arr[j]);
                k--;
            }
            j++;
        }
        return ans;
    }
